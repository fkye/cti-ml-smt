def jacobi_2d(A: Array(float64, 2), B: Array(float64, 2), TSTEPS: int32, N: int32):
#scop begin
    for t in range(0, TSTEPS):
        for i in range(1, N-1):
            for j in range(1, N-1):
                B[i, j] = 0.2 * (A[i, j] + A[i, j-1] + A[i, j+1] + A[i+1, j] + A[i-1, j])
        for i in range(1, N-1):
            for j in range(1, N-1):
                A[i, j] = 0.2 * (B[i, j] + B[i, j-1] + B[i, j+1] + B[i+1, j] + B[i-1, j])
#scop end
    return A
